#!/bin/bash
OPTIONS="Create Status Delete Quit"
REPO_PATH=/etc/yum.repos.d/docker.repo
HELLO=Hello 
HOST_FILE=/home/ec2-user/ansible/config/hosts
ANSIBLE_DIR=/tmp/config
SSH_KEY=/root/.ssh/id_rsa
AUTH_KEYS=/home/ec2-user/ansible/authorized_keys
DB_PATH=/home/ec2-user/ansible/database
DB_ROOT_PW=secret
IMAGE="openssh-server:latest"
WEB_CONTENT=/home/ec2-user/ansible/config/roles/web/files/html

function checkvar()
{
    local  __resultvar=$1
    while ! [[ $myresult = [0-9] ]]; do
      if [[ -n $myresult ]]; then
        echo "'$__resultvar' has a non-digit somewhere in it. Please try again."
      fi
        read myresult
    done
    eval $__resultvar="'$myresult'"
    unset myresult
}

function prepare()
{
  if [ ! -f "/etc/yum.repos.d/docker.repo" ]
  then 
    touch /etc/yum.repos.d/docker.repo
    echo [dockerrepo] >> /etc/yum.repos.d/docker.repo
    echo name=Docker Repository >> /etc/yum.repos.d/docker.repo
    echo baseurl=https://yum.dockerproject.org/repo/main/centos/7/ >> /etc/yum.repos.d/docker.repo
    echo enabled=1 >> /etc/yum.repos.d/docker.repo
    echo gpgcheck=1 >> /etc/yum.repos.d/docker.repo
    echo gpgkey=https://yum.dockerproject.org/gpg >> /etc/yum.repos.d/docker.repo
  fi
  yum update
  yum install docker-engine
  systemctl enable docker.service
  systemctl start docker
  sudo usermod -aG docker ec2-user
}

select opt in $OPTIONS; do
  case $opt in
    "Create")
      echo "Enter number of web instances NGINX:"
      checkvar WEB
      echo "Enter number of db instances in Galera cluster:"
      checkvar DB
      echo "Enter number of control container:"
      checkvar CON
      echo "Use default parameters (y/n)"
      read DEF
      if [[ $DEF == "n" || $DEF == "N" ]]; then
        echo "Please enter your parameters:"
        echo "Folder to store database on host: "
        read $DB_PATH
        echo "MariaDB root password: "
        read $DB_ROOT_PW
        echo "Docker images that will be used: "
        read $IMAGE
        echo "folder on control host with Ansible project: "
        read $ANSIBLE_DIR
        echo "Use default parameters (y/n)"
      else
        echo "Default parameters will be used."
        echo "Database containers:"
        echo "Folder to store database on host: $DB_PATH, container path to database: /var/lib/mysql, DB root password: $DB_ROOT_PW"
        echo "Web containers:"
        echo "Folder to store website on host: $WEB_CONTENT, container path to database: /var/www/html"
        echo "Control containers:"
        echo "Docker images that will be used: $IMAGE and folder on control host with Ansible project: $ANSIBLE_DIR"
      fi
      echo "Next containers will be created: web - $WEB, MariaDB - $DB, control - $CON."
      echo "Confirm or discard (y/n):"
      read CONFIRM
      if [ "$CONFIRM" = "y" ]; then
        echo "DB container creation:"
        for i in $DB; do
          if [ ! -d "$DB_PATH/$i" ]; then
            mkdir $DB_PATH/$i
          fi
          if [ docker ps -a | grep -w "dgb$i" ]; then          
            echo "Container exists. Please delete it first."
          else  
            echo "docker run -v $DB_PATH/$i:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=$DB_ROOT_PW --name=gdb$i -d -ti dockerbase/$IMAGE /bin/bash"
            GDBS="$GDBS gdb$i"
          fi  
        done
        unset i
        for i in $WEB; do
          if [ ! -d "$WEB_CONTENT" ]; then
            echo "Web content is missing. Please check path and try again."
          fi
          if [ docker ps -a | grep -w "web$i" ]; then          
            echo "Container exists. Please delete it first."
          else  
            echo "docker run -v $WEB_CONTENT:/var/www/html --name=web$i --link $GDBS -d -ti dockerbase/openssh-server:latest /bin/bash"
            WEBS="$WEB gdb$i"
          fi           
        done
        unset i    
        echo "DBs - $GDBS and WEBs - $WEBS"
# check for existence of our base image
# shell: "docker ps -a | grep -w web"
#        
#        for i in $CON; do
#          if [ ! -d "$DB_PATH/$i" ]; then
#            mkdir $DB_PATH/$i
#          fi
#          echo "docker run -v $DB_PATH/$i:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=$DB_ROOT_PW --name=gdb$i -d -ti dockerbase/$IMAGE /bin/bash"
#        done       
        echo Created!
      else
        echo Discarded!
      fi
    ;;
    "Status")
      docker ps -a
    ;;
    "Delete")
      echo "Delete"
    ;;
    "Apply")
      echo "Apply"
    ;;
    "Quit")
      break
    ;;
    *) echo invalid option;;
  esac
done

